@page "/person/new"
@using System.ComponentModel.DataAnnotations
@using System.Diagnostics.CodeAnalysis
@using Newtonsoft.Json.Serialization
@using PeopleDB.Shared.Repository
@inject HttpClient http

<PersonForm Person="@person" ButtonText="Create Person" FormTitle="Add Person" OnValidSubmit="@OnValidSubmit"/>

        @*         <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4 mt-16">Address</MudText> *@
@*         <EditForm Model="@address" OnValidSubmit="addressValidSubmit"> *@
@*             <MudTextField Class="my-1" Variant="Variant.Outlined" Label="Address 1" @bind-Value="address.Address1" For="@(() => address.Address1)" Immediate="true" Required="true"/> *@
@*             <MudTextField Class="my-1" Variant="Variant.Outlined" Label="Address 2" @bind-Value="address.Address2" For="@(() => address.Address2)"/> *@
@*             <MudTextField Class="my-1" Variant="Variant.Outlined" Label="City" @bind-Value="address.City" For="@(() => address.City)" Immediate="true" Required="true"/> *@
@*             <MudSelect Class="my-1" T="string" Label="Province" Variant="Variant.Outlined" Immediate="true" Required="true" OffsetY="true" Dense="true"> *@
@*                 @if (canadaProvinces != null) { *@
@*                     foreach (string province in canadaProvinces) { *@
@*                         <MudSelectItem Value="@(province)"/> *@
@*                     } *@
@*                 } *@
@*             </MudSelect> *@
@*             <MudTextField Class="my-1" Variant="Variant.Outlined" Label="Country" @bind-Value="address.Country" For="@(() => address.Country)" Immediate="true" Required="true"/> *@
@*             <MudTextField Class="my-1" Variant="Variant.Outlined" Label="Postal Code" @bind-Value="address.PostalCode" For="@(() => address.PostalCode)" Immediate="true" Required="true"/> *@
@*         </EditForm> *@

@code {
    Person person = new Person();
    
    private void OnValidSubmit(EditContext context) {
        bool personSuccess = true;
        StateHasChanged();
    }

    // Address address = new Address();
    // bool addressSuccess;
    
    // public class NewAddressValidate {
    //     [Required]
    //     public string address1 { get; set; }
    //     
    //     [Required]
    //     public string address2 { get; set; }
    //     
    //     [Required]
    //     public string city { get; set; }
    //     
    //     [Required]
    //     public string province { get; set; }
    //     
    //     [Required]
    //     public string country { get; set; }
    //     
    //     [Required]
    //     public string postalCode { get; set; }
    // }
}

@* @code { *@
@*     List<string> canadaProvinces = new List<string> { *@
@*         "Alberta", *@
@*         "British Columbia", *@
@*         "Manitoba", *@
@*         "New Brunswick", *@
@*         "Newfoundlands and Labrador", *@
@*         "Northwest Territories", *@
@*         "Nova Scotia", *@
@*         "Nunavut", *@
@*         "Ontario", *@
@*         "Prince Edward Island", *@
@*         "Quebec", *@
@*         "Saskatchewan", *@
@*         "Yukon" *@
@*     }; *@
}