// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleDB.Shared.Context;

namespace PeopleDB.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PeopleDB.Shared.Models.Address", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<uint>("PersonId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(6) CHARACTER SET utf8mb4")
                        .HasMaxLength(6);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Person", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("varchar(70) CHARACTER SET utf8mb4")
                        .HasMaxLength(70);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("varchar(70) CHARACTER SET utf8mb4")
                        .HasMaxLength(70);

                    b.Property<string>("sin")
                        .IsRequired()
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.HasKey("Id");

                    b.HasIndex("sin")
                        .IsUnique();

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Pet", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("PersonId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("PetName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<uint>("PetRegistrationNumber")
                        .HasColumnType("int unsigned");

                    b.Property<string>("PetSpecies")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PetRegistrationNumber")
                        .IsUnique();

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Vehicle", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("PersonId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleIdNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleMake")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<short>("VehicleYear")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("VehicleIdNumber")
                        .IsUnique();

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Address", b =>
                {
                    b.HasOne("PeopleDB.Shared.Models.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Pet", b =>
                {
                    b.HasOne("PeopleDB.Shared.Models.Person", "Person")
                        .WithMany("Pets")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeopleDB.Shared.Models.Vehicle", b =>
                {
                    b.HasOne("PeopleDB.Shared.Models.Person", "Person")
                        .WithMany("Vehicles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
